# .github/workflows/ci.yml

name: Python CI

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ] # Or your default branch (e.g., master)
  pull_request:
    branches: [ "main" ] # Or your default branch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job performs linting and testing
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Strategy for matrix testing (optional, run on multiple Python versions)
    # strategy:
    #   matrix:
    #     python-version: ["3.9", "3.10", "3.11"]

    steps:
      # 1. Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Python environment
      - name: Set up Python # Using 3.11 here, adjust if needed
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          # python-version: ${{ matrix.python-version }} # Use this if using matrix strategy
          cache: 'pip' # Cache pip dependencies

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4 testing 
      - name: Test with pytest
        env:
          TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
          GROQ_API_KEY:  ${{ secrets.GROQ_API_KEY  }} # Inject the secret as an env variable
        run: |
          pytest
